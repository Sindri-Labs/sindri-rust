name: CI Workflows

on:
  push:
    branches: ["main"]
  pull_request:
    # Do not run on draft pull requests
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

env:
  CARGO_TERM_COLOR: always
  VCR_PATH: ../.github/assets/recordings/integration.vcr.json

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    # Do not run on draft pull requests
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust files
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9

      - name: Check formatting
        run: cargo fmt --check

      - name: Install Clippy
        run: rustup component add clippy

      - name: Run Clippy
        run: cargo clippy

      - name: Build
        run: cargo build --verbose

      - name: Run doc tests
        run: cargo test --doc --features replay

      - name: Run sindri core unit tests
        run: cargo nextest run -E 'package(sindri) & kind(lib) - test(integrations)'

      - name: Run sindri Sp1 v3 unit tests
        run: cargo nextest run -E 'package(sindri) & kind(lib) & test(sp1_v3)' --features sp1-v3

      - name: Run sindri Sp1 v5 unit tests
        run: cargo nextest run --release -E 'package(sindri) & kind(lib) & test(sp1_v5)' --features sp1-v5 --workspace --exclude sp1-proof

      - name: Run sindri integration tests (offline)
        run: cargo nextest run -E 'package(sindri) & kind(test) & test(end_to_end)' --features replay

      - name: Run sindri-cli unit tests
        run: cargo nextest run -E 'package(sindri-cli) & kind(bin)'

      - name: Run sindri-cli integration tests (offline)
        run: cargo nextest run -E 'package(sindri-cli) & kind(test)' --features replay

