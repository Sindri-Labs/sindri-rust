/*
 * Sindri Labs API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.15.1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApiKeyDoesNotExistResponse : Action: Attempt to fetch an API key. Error: No matching API key was found.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiKeyDoesNotExistResponse {
    #[serde(rename = "apikey_id")]
    pub apikey_id: Box<models::ApikeyId>,
    #[serde(rename = "error")]
    pub error: String,
    #[serde(rename = "exception_id", skip_serializing_if = "Option::is_none")]
    pub exception_id: Option<Box<models::ExceptionId>>,
    #[serde(rename = "message")]
    pub message: String,
}

impl ApiKeyDoesNotExistResponse {
    /// Action: Attempt to fetch an API key. Error: No matching API key was found.
    pub fn new(
        apikey_id: models::ApikeyId,
        error: String,
        message: String,
    ) -> ApiKeyDoesNotExistResponse {
        ApiKeyDoesNotExistResponse {
            apikey_id: Box::new(apikey_id),
            error,
            exception_id: None,
            message,
        }
    }
}
