/*
 * Sindri Labs API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.14.5
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ProjectLatestCircuitResponse : Response for a project's latest circuit.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectLatestCircuitResponse {
    /// A unique identifier generated for the circuit. UUID4 format.
    #[serde(rename = "circuit_id")]
    pub circuit_id: String,
    /// The development framework used to write the circuit. This is specified during creation in the included sindri.json file.
    #[serde(rename = "circuit_type")]
    pub circuit_type: models::CircuitType,
    /// The UTC datetime the circuit was uploaded in ISO8601 format.
    #[serde(rename = "date_created")]
    pub date_created: String,
    /// The proving scheme for this circuit. This is specified during creation in the included sindri.json file.
    #[serde(rename = "proving_scheme")]
    pub proving_scheme: String,
    /// The status of the circuit job.
    #[serde(rename = "status")]
    pub status: models::JobStatus,
}

impl ProjectLatestCircuitResponse {
    /// Response for a project's latest circuit.
    pub fn new(circuit_id: String, circuit_type: models::CircuitType, date_created: String, proving_scheme: String, status: models::JobStatus) -> ProjectLatestCircuitResponse {
        ProjectLatestCircuitResponse {
            circuit_id,
            circuit_type,
            date_created,
            proving_scheme,
            status,
        }
    }
}

