/*
 * Sindri Labs API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.15.1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CircuitIsNotReadyResponse : Action: Attempt to prove with a non-ready circuit (not compiled) Error: The circuit is not ready to accept proofs
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CircuitIsNotReadyResponse {
    #[serde(rename = "circuit_id")]
    pub circuit_id: Box<models::CircuitId>,
    #[serde(rename = "error")]
    pub error: String,
    #[serde(rename = "exception_id", skip_serializing_if = "Option::is_none")]
    pub exception_id: Option<Box<models::ExceptionId>>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
}

impl CircuitIsNotReadyResponse {
    /// Action: Attempt to prove with a non-ready circuit (not compiled) Error: The circuit is not ready to accept proofs
    pub fn new(circuit_id: models::CircuitId, error: String) -> CircuitIsNotReadyResponse {
        CircuitIsNotReadyResponse {
            circuit_id: Box::new(circuit_id),
            error,
            exception_id: None,
            message: None,
        }
    }
}
