/*
 * Sindri Labs API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.14.5
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ProofListInput : Client input for filtering proofs.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProofListInput {
    /// Return proofs created after this date.
    #[serde(rename = "date_created_after", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub date_created_after: Option<Option<String>>,
    /// Return proofs created before this date.
    #[serde(rename = "date_created_before", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub date_created_before: Option<Option<String>>,
    /// Return proofs for this project.
    #[serde(rename = "project_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub project_name: Option<Option<String>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::JobStatus>,
}

impl ProofListInput {
    /// Client input for filtering proofs.
    pub fn new() -> ProofListInput {
        ProofListInput {
            date_created_after: None,
            date_created_before: None,
            project_name: None,
            status: None,
        }
    }
}

