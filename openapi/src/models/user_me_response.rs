/*
 * Sindri Labs API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.15.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UserMeResponse : Details about the currently authenticated user.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserMeResponse {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "first_name")]
    pub first_name: String,
    #[serde(rename = "last_name")]
    pub last_name: String,
    /// The username of the user.
    #[serde(rename = "username")]
    pub username: String,
    /// The email address of the user.
    #[serde(rename = "email")]
    pub email: String,
    /// The date that the user joined Sindri.
    #[serde(rename = "date_joined")]
    pub date_joined: String,
    /// The teams that the user is a member of.
    #[serde(rename = "teams")]
    pub teams: Vec<models::TeamDetail>,
}

impl UserMeResponse {
    /// Details about the currently authenticated user.
    pub fn new(id: i32, first_name: String, last_name: String, username: String, email: String, date_joined: String, teams: Vec<models::TeamDetail>) -> UserMeResponse {
        UserMeResponse {
            id,
            first_name,
            last_name,
            username,
            email,
            date_joined,
            teams,
        }
    }
}

