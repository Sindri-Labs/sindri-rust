/*
 * Sindri Labs API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.14.5
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ProofDoesNotExistResponse : Action: Attempt to fetch a proof with proof_id. Error: Proof with proof_id does not exist.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProofDoesNotExistResponse {
    #[serde(rename = "error")]
    pub error: String,
    #[serde(rename = "proof_id")]
    pub proof_id: Box<models::ProofId>,
    #[serde(rename = "message")]
    pub message: String,
}

impl ProofDoesNotExistResponse {
    /// Action: Attempt to fetch a proof with proof_id. Error: Proof with proof_id does not exist.
    pub fn new(error: String, proof_id: models::ProofId, message: String) -> ProofDoesNotExistResponse {
        ProofDoesNotExistResponse {
            error,
            proof_id: Box::new(proof_id),
            message,
        }
    }
}

